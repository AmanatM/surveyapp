{"version":3,"sources":["assets/imgs/logo.svg","assets/imgs/facebook-icon.svg","assets/imgs/google-icon.svg","assets/imgs/survapp-bg1.jpg","assets/imgs/refresh-icon.svg","assets/imgs/survapp-bg-blured.jpg","GlobalStyle.js","elements/Container.js","components/Footer.js","elements/AuthButton.js","pages/LoginPage/LoginForm.js","pages/LoginPage/LoginPage.js","pages/RegistrationPage/RegistrationForm.js","pages/RegistrationPage/RegistrationPage.js","pages/HomePage/HomePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Container","styled","div","Footer","footer","PageFooter","href","className","AuthButton","button","props","red","Form","form","Input","input","AuthSocial","Agreement","p","Divider","LoginForm","type","autoComplete","placeholder","src","refreshIcon","alt","to","blue","facebookLogo","googleLogo","LoginSection","section","backgroundImg","Logo","img","Info","LoginPage","logo","FormTitle","SubmitButton","TwoInOneLine","colWidth","Eye","PasswordVisibilityToggler","toggle","eyeClass","onClick","PassWordInput","useState","visible","setVisible","inputType","PasswordContainer","e","preventDefault","RegistrationForm","require","value","RegistrationSection","RegistrationPage","HomePage","App","exact","path","render","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.379f53c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.fe84ffc3.svg\";","module.exports = __webpack_public_path__ + \"static/media/facebook-icon.8cda0158.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-icon.8d124e45.svg\";","module.exports = __webpack_public_path__ + \"static/media/survapp-bg1.055fcb42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-icon.dc4c3d95.svg\";","module.exports = __webpack_public_path__ + \"static/media/survapp-bg-blured.b2776b9e.jpg\";","import { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n\n  * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n  }\n  \n  body {\n    margin: 0;\n    padding: 0;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\",\n      \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\",\n      sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n  code {\n    font-family: source-code-pro, Menlo, Monaco, Consolas, \"Courier New\", monospace;\n  }\n\n  input {\n    font-size: inherit;\n  }\n\n  img {\n    max-width: 100%;\n  }\n\n  button {\n    border: none;\n    cursor: pointer;\n  }\n\n  a {\n    color: inherit;\n    text-decoration: none;\n    cursor: pointer;\n\n    &:hover {\n      text-decoration: underline;\n    }\n\n  }\n`;\nexport default GlobalStyle;\n\n\n","import styled from 'styled-components'\n\n\nconst Container = styled.div`\n  width: 95%;\n  max-width: 1280px;\n  margin: 0 auto;\n`\n\nexport default Container","import React from 'react'\nimport styled from 'styled-components'\n\nconst Footer = styled.footer`\n    text-align: center;\n    padding: 20px 0;\n    width: 100%;\n    \n    ul {\n        display: flex;\n        justify-content: center;\n\n        li {\n            list-style: none;\n            font-weight: bold;\n            font-size: .8em;\n            margin: 0 10px;\n            a.green {\n                color: #29CC97;\n                text-decoration: none;\n            }\n        }\n    }\n\n`\n\nconst PageFooter = () => {\n    return (\n        <Footer>\n            <ul>\n                <li><a href=\"https://neobis.kg\" className=\"green\">Neobis.kg</a></li>\n                <li>ASU design</li>\n                <li>2019</li>\n            </ul>\n        </Footer>\n    )\n}\n\nexport default PageFooter","import styled from 'styled-components'\n\nlet AuthButton = styled.button`\n    background-color: grey;\n    background-color: ${props => props.red ? '#FF473A' : '#3a71ff'};\n    color: white;\n    font-size: inherit;\n    color: white;\n    padding: 10px;\n    font-size: 14px;\n    justify-content: center;\n    display: flex;\n    align-items: center;\n    margin: 2px 0;\n    border-radius: 0px;\n`\n\nexport default AuthButton","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport AuthButton from '../../elements/AuthButton'\nimport facebookLogo from '../../assets/imgs/facebook-icon.svg'\nimport googleLogo from '../../assets/imgs/google-icon.svg'\nimport refreshIcon from '../../assets/imgs/refresh-icon.svg'\n\nconst Form = styled.form`\n    max-width: 100%;\n    width: 400px;\n    display: flex;\n    flex-direction: column;\n    margin: 0 auto;\n    margin-top: 30px;\n\n    div.forgotPass {\n        font-size: .8em;\n        display: flex;\n        justify-content: flex-end;\n        align-content: center;\n        margin: 7px;\n        cursor: pointer;\n\n        img {\n            width: 12px;\n            margin-left: 4px;\n        }\n    }\n\n    div.createAcc {\n        font-size: .8em;\n        margin-top: 4px;\n        cursor: pointer;\n    }\n`\n\nconst Input = styled.input`\n    font-size: inherit;\n    border: none;\n    padding: 10px 20px;\n    margin: 5px 0;\n    border-radius: 8px;\n    font-family: inherit;\n`\n\nconst AuthSocial = styled(AuthButton)`\n    padding: 3px 5px;\n    border-radius: 8px;\n\n    img {\n        width: 30px;\n    }\n\n    div {\n        margin: auto;\n        position: relative;\n        left: -13.5px;\n    }\n\n`\n\nconst Agreement = styled.p`\n    font-family: 'Arial', sans-serif;\n    font-size: .8em;\n    text-align: center;\n    margin-top: 20px;\n`\n\nconst Divider = styled.div`\n    text-align: center;\n    margin-bottom: 20px;\n    font-weight: bold;\n    display: flex;\n    align-items: center;\n\n    div {\n        margin: 0 20px;\n    }\n\n    &::before, &::after {\n        \n        width: 100%;\n        content: '';\n        font-weight: normal;\n        display: flex;\n        height: 1px;\n        background-color: white;\n    }\n`\n\nconst LoginForm = () => {\n\n    return (\n        <Form >\n            <Input type=\"text\" autoComplete=\"username\" placeholder=\"Никнэйм\"/>\n            <Input type=\"password\" autoComplete=\"current-password\" placeholder=\"Пароль\"/>\n            <div className=\"forgotPass\">Забыли пароль? <img src={refreshIcon} alt=\"\"/></div>\n            <AuthButton red type=\"submit\">Войти</AuthButton>\n            <div className=\"createAcc\"><Link to=\"/registration\">Создать аккаунт</Link></div>\n            <Divider><div>OR</div></Divider>\n            <AuthSocial blue><img src={facebookLogo} alt=\"facebook logo\"/><div>Войти через Facebook</div></AuthSocial>\n            <AuthSocial red><img src={googleLogo} alt=\"google logo\"/><div>Войти через Google</div></AuthSocial>\n\n            <Agreement>Продолжая, вы соглашаетесь с <b>Условиями<br/> использования</b> и Политикой <br/> конфиденциальности Survey App</Agreement>\n\n        </Form>\n    )\n}\n\nexport default LoginForm","import React from 'react'\nimport backgroundImg  from '../../assets/imgs/survapp-bg1.jpg'\nimport styled from 'styled-components'\nimport logo from '../../assets/imgs/logo.svg'\n\n\nimport Container from '../../elements/Container'\nimport PageFooter from '../../components/Footer'\nimport Loginform from './LoginForm'\n\n\nconst LoginSection = styled.section`\n    background: url(${backgroundImg}) #3F414A;\n    min-height: 100vh;\n    background-size: cover;\n    color: white;\n    background-position: center;\n    padding-top: 45px;\n`\n\nconst Logo = styled.img`\n    width: 400px;\n    display: block;\n    margin: 0 auto;\n`\nconst Info = styled.div`\n        display: flex;\n        max-width: 100%;\n        width: 500px;\n        margin: 0 auto;\n        justify-content: space-between;\n        margin-top: 3em;\n        align-content: center;\n        font-size: 1.1em;\n\n        div {\n            text-align: center;\n            display: flex;\n            align-items: center;\n        }\n`\n\n\nconst LoginPage = () => {\n    \n    return (\n        <LoginSection>\n            <Container>\n\n                <Logo alt='logo' src={logo}/>\n\n                <Info>\n                    <div >Create your <br/>Own Surveys</div>\n                    <div> <b>OR</b> </div>\n                    <div>Answer <br/> someone else's <br/> questions  </div>\n                </Info>\n\n                <Loginform/>\n            </Container>\n            <PageFooter/>\n        </LoginSection>\n    )\n}\n\nexport default LoginPage","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nimport AuthButton from '../../elements/AuthButton'\nimport facebookLogo from '../../assets/imgs/facebook-icon.svg'\nimport googleLogo from '../../assets/imgs/google-icon.svg'\n\n\nconst Form = styled.form`\n    max-width: 100%;\n    width: 440px;\n    display: flex;\n    padding: 20px;\n    color: #373737;\n    background-color: #fff;\n    flex-direction: column;\n    border-radius: 8px;\n    margin: 0 auto;\n\n    select {\n        font-size: inherit;\n        border: none;\n        margin: 5px 0;\n        border-radius: 8px;\n        font-family: inherit;\n        background-color: #E9E9E9;\n        height: 44px;\n    }\n`\n\nconst FormTitle = styled.div`\n        text-align: center;\n        padding-bottom: 15px;\n        margin-bottom: 10px;\n        border-bottom: 1px solid #E9E9E9;\n\n        h2 {\n            font-weight: normal;\n        }\n\n`\n\nconst SubmitButton = styled(AuthButton)`\n    margin-top: 10px;\n    @media screen and (max-width: 425px)  {\n        padding: 15px;\n    }\n`\n\nconst AuthSocial = styled(AuthButton)`\n    padding: 5px 5px;\n    border-radius: 8px;\n    margin-bottom: 10px;\n\n    img {\n        width: 30px;\n    }\n\n    div {\n        margin: auto;\n        position: relative;\n        left: -13.5px;\n        padding-left: 30px;\n    }\n\n    @media screen and (max-width: 425px)  {\n        padding: 10px;\n    }\n\n\n`\n\n\nconst Input = styled.input`\n    font-size: inherit;\n    border: none;\n    padding: 10px 20px;\n    margin: 5px 0;\n    border-radius: 8px;\n    font-family: inherit;\n    background-color: #E9E9E9;\n    outline: none;\n\n    &[type=\"date\"] {\n        &:placeholder {\n\n        }\n    }\n`\n\nconst Divider = styled.div`\n    text-align: center;\n    margin-bottom: 20px;\n    font-weight: bold;\n    display: flex;\n    color: black;\n    align-items: center;\n    margin-top: 20px;\n\n    div {\n        margin: 0 20px;\n    }\n\n    &::before, &::after {\n        width: 100%;\n        content: '';\n        font-weight: normal;\n        display: flex;\n        height: 1px;\n        background-color: black;\n    }\n`\n\nconst Agreement = styled.p`\n    font-family: 'Arial', sans-serif;\n    font-size: .8em;\n    text-align: center;\n    margin-top: 20px;\n`\n\nconst TwoInOneLine = styled.div`\n\n    display: flex;\n    align-content: center;    \n    *{\n\n        &:first-child {\n            width: ${props => props.colWidth}%;\n        }\n\n        &:last-child {\n            width: calc(${props => 100 - +(props.colWidth)}% - 10px);\n            margin-left: 10px;\n        }\n    }\n\n`\n\nconst Eye = styled.div`\n    width: 20px;\n    height: 20px;\n    border: solid 2px #3E3E3E;\n    border-radius:  75% 15%;\n    position: relative;\n    transform: rotate(45deg);\n    pointer-events: none;\n    transition: all .3s;\n\n    &::before {\n        content: '';\n        display: block;\n        position: absolute;\n        width: 7px;\n        height: 7px;\n        border: solid 2px #3E3E3E;\n        border-radius: 50%;\n        left: 2px;\n        top: 2px;\n        opacity: 1;\n        transition: all .3s;\n\n    }\n\n    &::after {\n        content: '';\n        display: block;\n        position: absolute;\n        width: 25px;\n        height: 3px;\n        transition: all .2s;\n        background-color: #3E3E3E;\n        right: -4px;\n        top: 7px;\n        transform: rotate(70deg);\n        transition: all .2s;\n        opacity: 0;\n    }\n\n    &.invisible {\n        &:before {\n            opacity: 0;\n        }\n\n        &:after {\n            opacity: 1;\n        }\n    }\n`\nconst PasswordVisibilityToggler = ({toggle, eyeClass}) => {\n\n    return (\n        <button onClick={toggle}>\n            <Eye className={eyeClass}></Eye>\n        </button>\n    )\n}\n\n\nconst PassWordInput = ({placeholder}) => {\n\n    const [ visible, setVisible ] = useState(false)\n\n    const toggle = (e) => {\n        e.preventDefault()\n        setVisible(!visible)\n    }\n\n    const eyeClass = visible ? '' : 'invisible'\n    const inputType = visible ? 'text' : 'password'\n\n\n    return (\n        <PasswordContainer>\n            <Input type={inputType} autoComplete=\"new-password\" placeholder={placeholder}/><PasswordVisibilityToggler toggle={toggle} eyeClass={eyeClass}/>\n        </PasswordContainer>\n    )\n}\n\n\n\nconst PasswordContainer = styled.div`\n\n    display: flex;\n    align-items: center;\n\n\n    input {\n        border-top-right-radius: 0px;\n        border-bottom-right-radius: 0px;\n        width: 80%;\n        height: 40px;\n    }\n    \n    button {\n        -webkit-tap-highlight-color: rgba(0,0,0,0);\n        outline: none;\n        border-radius: 8px;\n        border-top-left-radius: 0px;\n        border-bottom-left-radius: 0px;\n        background-color: #e9e9e9;\n\n        min-width: 50px;\n        width: 20%;\n        text-align: center;\n        display: flex;\n        justify-content: flex-end;\n        padding-right: 15px;\n        height: 40px;\n\n    }\n`\n\n\n\n\nconst RegistrationForm = () => {\n\n    return (\n        <Form >\n            <FormTitle>\n                <h2>Новый пользователь</h2>\n                <p><small>Справшивате и отвечайте</small></p>\n            </FormTitle>\n\n            <Input require type=\"email\" autoComplete=\"false\" placeholder=\"Email почта\"/>\n            <Input type=\"email\" autoComplete=\"false\" placeholder=\"Имя\"/>\n            <Input type=\"email\" autoComplete=\"false\" placeholder=\"Фамилия\"/>\n\n            <TwoInOneLine colWidth=\"50\">\n                <Input type=\"date\" placeholder=\"Дата рождения\"/>\n                <select>\n                    <option value=\"male\">Мужской</option>\n                    <option value=\"female\">Женский</option>\n                </select>\n            </TwoInOneLine>\n            <Input type=\"text\" placeholder=\"Страна\"/>\n            <Input type=\"text\" placeholder=\"Город\"/>\n            <TwoInOneLine colWidth=\"30\">\n                <Input type=\"number\" placeholder=\"+996\"/>\n                <Input type=\"number\"placeholder=\"Телефон\"/>\n            </TwoInOneLine>\n\n            <PassWordInput placeholder=\"Пароль\"/>\n            <PassWordInput placeholder=\"Подтвердите пароль\"/>\n\n\n            <SubmitButton red type=\"submit\">Продолжить</SubmitButton>\n            <Divider><div>ИЛИ</div></Divider>\n\n            <AuthSocial blue><img src={facebookLogo} alt=\"facebook logo\"/><div>Зарегестрироваться с помощью Facebook</div></AuthSocial>\n            <AuthSocial red><img src={googleLogo} alt=\"google logo\"/><div>Зарегестрироваться с помощью Google</div></AuthSocial>\n            <Agreement>Уже есть аккунт? <b><Link to=\"/login\">Войти</Link></b></Agreement>\n            <Agreement>Продолжая, вы соглашаетесь с <b>Условиями<br/> использования</b> и Политикой <br/> конфиденциальности Survey App</Agreement>\n        </Form>\n    )\n}\n\nexport default RegistrationForm","import React from 'react'\nimport styled from 'styled-components'\n\nimport RegistrationForm from './RegistrationForm'\nimport Footer from '../../components/Footer'\n\nimport Container from '../../elements/Container'\n\nimport backgroundImg  from '../../assets/imgs/survapp-bg-blured.jpg'\nimport logo  from '../../assets/imgs/logo.svg'\n\n\n\nconst RegistrationSection = styled.section`\n    min-height: 100vh;\n    background: url(${backgroundImg}) #3F414A;\n    background-position: center;\n    background-size: cover;\n    color: white;\n    padding-top: 45px;\n`\n\nconst Logo = styled.img`\n    width: 300px;\n    display: block;\n    margin: 0 auto;\n    margin-bottom: 30px;\n`\n\n\nconst RegistrationPage = () => {\n\n    return (\n        <RegistrationSection>\n            <Container>\n                <Logo alt=\"surveyapp logo\" src={logo}/>\n                <RegistrationForm/>\n            </Container>\n            <Footer/>\n        </RegistrationSection>\n    )\n}\n\nexport default RegistrationPage","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Container from '../../elements/Container'\n\n\nconst HomePage = () => {\n\n    return (\n        <Container>\n            <Link to=\"/login\">Go to login page</Link>\n        </Container>\n    )\n}\n\nexport default HomePage","import React from 'react'\nimport GlobalStyle from './GlobalStyle' \nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\n// import {\n//   BrowserRouter as Router,\n//   Route, Link, Redirect, withRouter\n// } from 'react-router-dom'\n\nimport LoginPage from './pages/LoginPage/LoginPage'\nimport RegistrationPage from './pages/RegistrationPage/RegistrationPage'\nimport HomePage from './pages/HomePage/HomePage'\n\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n        <GlobalStyle/>\n          <Router>\n            <Switch>\n            <Route exact path=\"/\" render={() => <HomePage/>}/>\n              <Route exact path=\"/login\" render={() => <LoginPage/>}/>\n              <Route exact path=\"/registration\" render={() => <RegistrationPage/>}/>             \n            </Switch>\n\n          </Router>\n      </div>\n  );\n}\n\nexport default App \n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\n\nexport function register(config) {\n  \n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      \n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}